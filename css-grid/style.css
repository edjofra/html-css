/* Estilos Gerais */
body {
    font-family: Arial, sans-serif;
    margin: 20px;
  }
  
  section {
    margin-bottom: 40px;
  }
  
  h2 {
    margin-top: 40px;
    border-bottom: 2px solid #ccc;
    padding-bottom: 10px;
  }
  
  .grid-container {
    display: grid;
    background-color: #eee;
    padding: 10px;
    gap: 5px;
  }
  
  .item-grid {
    background-color: #2196f3;
    color: white;
    padding: 20px;
    font-size: 1.2em;
    text-align: center;
    
  }
  
  /* 1. Grid Básico com Linhas e Colunas Definidas */
  .basico{
   grid-template-columns: 1fr 1fr 1fr;
   grid-auto-rows: 200px;
  }
  
  /* 2. Uso de repeat(), minmax() e fr */
.repeat-minmax{
   grid-template-columns: repeat(4, minmax(150px, 1fr));
}
  
  /* 3. Grid Responsivo com auto-fit e minmax() */
  .auto-fit {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    
  }
  
  /* 4. Grid com Posicionamento de Itens e Sobreposição */
  .sobreposicao {
   grid-template-columns: 1fr 1fr 1fr;
   grid-template-rows: 100px 100px;
   position: relative;
  }
  .item1{
    grid-column: 1/3;
    grid-row: 1/3;
  }
  .item2{
    grid-column: 2/4;
  }

  .item3{
    grid-column: 1/4;
  }
  .item4{
    grid-column: 3/4;
  }
  
 
  
  
  /* 5. Grid com Áreas Nomeadas e Alinhamento */
.areas-nomeadas{
  grid-template-areas: 
  "cabecalho cabecalho"
  "menu conteudo"
  "rodape rodape";
  grid-template-columns: 1fr 2fr;
  grid-template-rows: auto;
}
.cabecalho{
  grid-area: cabecalho;
}
.menu{
  grid-area: menu;
}
.conteudo{
  grid-area: conteudo;
}
.rodape{
  grid-area: rodape;
}
  
  /* Alinhamento */
  
  
  /* 6. Grid com Grid Aninhado */
  .grid-aninhado {
  grid-template-columns: repeat(2, 1fr);
  }
  .subgrid-container{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    
    gap: 15px;
  }

  .subitem-grid{
    background-color: aqua;
  }
  /* 7. Exemplo Prático: Layout Completo de Página */
  .layout-pagina{
    grid-template-areas: 
    "header header header"
    "nav main aside"
    "footer footer footer";
    grid-template-columns: 1fr 2fr 1fr;
    grid-template-rows: auto 1fr auto;
    height: 500px;
  }
  .header{
    grid-area: header;
  }
  .nav{
    grid-area: nav;
  }
  .main{
    grid-area: main;
  }
  .aside{
    grid-area: aside;
  }
  .footer{
    grid-area: footer;
  }

  @media(max-width: 768px){
    .layout-pagina{
      grid-template-areas: 
    "header"
    "nav" 
    "main" 
    "aside"
    "footer";
    }
  }
